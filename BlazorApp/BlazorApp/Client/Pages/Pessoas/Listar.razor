@page "/Pessoas/Listar"
@page "/Pessoas"
@inject HttpClient http

<h3>Listar</h3>

<div>
    <a href="Pessoas/Criar" class="btn btn-success"><em class="oi oi-plus"></em> Criar</a>
</div>

<div>
    @if (pessoas == null)
    {
        <p>Carregando...</p>
    }
    else if (!pessoas.Any())
    {
        <p>Não há pessoas cadastradas</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nome</th>
                    <th>Idade</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pessoa in pessoas)
                {
                    <tr>
                        <td>@pessoa.Id</td>
                        <td>@pessoa.Nome</td>
                        <td>@pessoa.Idade</td>
                        <td>
                            <a class="btn btn-primary" href="Pessoas/Editar/@pessoa.Id"><em class="oi oi-pencil"></em></a>
                            <button class="btn btn-danger" @onclick="() => Excluir(pessoa.Id)"><em class="oi oi-trash"></em></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    List<Pessoa> pessoas;

    protected override async Task OnInitializedAsync()
    {
        await LoadPessoas();
    }

    async Task LoadPessoas()
    {
        pessoas = await http.GetJsonAsync<List<Pessoa>>("api/Pessoa");
    }

    async Task Excluir(int id)
    {
        await http.DeleteAsync($"api/Pessoa/{id}");
        await LoadPessoas();
    }
}